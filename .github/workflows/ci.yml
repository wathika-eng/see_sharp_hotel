name: Django CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd="pg_isready -U test_user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    env:
      SECRET_KEY: test_secret_key
      CLIENT_ID: test_client_id
      CLIENT_SECRET: test_client_secret
      NAME: test_db
      USER: test_user
      PASSWORD: test_password
      HOST: localhost
      PORT: 5432
      MPESA_ENVIRONMENT: sandbox
      MPESA_CONSUMER_KEY: test_consumer_key
      MPESA_CONSUMER_SECRET: test_consumer_secret
      MPESA_SHORTCODE: 123456
      MPESA_EXPRESS_SHORTCODE: 654321
      MPESA_SHORTCODE_TYPE: paybill
      MPESA_PASSKEY: test_passkey
      MPESA_INITIATOR_USERNAME: test_initiator_username
      EMAIL_HOST_USER: test_email_user
      EMAIL_HOST_PASSWORD: test_email_password

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage

    - name: Run tests
      run: |
        coverage run --source='.' manage.py test
        coverage report
        coverage xml
      env:
        DJANGO_SETTINGS_MODULE: Restaurant_management_system.settings

    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coverage.xml
